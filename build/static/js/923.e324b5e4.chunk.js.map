{"version":3,"file":"static/js/923.e324b5e4.chunk.js","mappings":"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","sources":["components/admin/AdminManageBannedWords.tsx","api/bannedword/index.ts","pages/admin/AdminManageReviews.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, Fragment } from 'react';\r\nimport { addBannedWord, getBannedWords, deleteBannedWord } from 'api/bannedword';\r\nimport { BannedWord } from 'types';\r\nimport styled from 'styled-components';\r\nimport * as S from 'styles/AdminStyledTemp';\r\nimport AdminLayout from 'components/admin/AdminLayout';\r\nimport AdminTable from 'components/admin/AdminTable';\r\nimport { Button } from 'components/shared';\r\nimport { Input } from 'styles/AdminStyledTemp';\r\nimport useAdminPagination from 'hooks/useAdminPagination';\r\nimport AdminPagination from './AdminPagination';\r\n\r\nconst take = 10;\r\n\r\nconst AdminManageBannedWords: React.FC = () => {\r\n  const [bannedWords, setBannedWords] = useState<BannedWord[]>([]);\r\n  const [newWord, setNewWord] = useState('');\r\n  const { currentPage, setCurrentPage, handleNextPage, handlePrevPage } = useAdminPagination();\r\n  const [total, setTotal] = useState(0);\r\n  const fetchBannedWords = useCallback(async () => {\r\n    const response = await getBannedWords(take, currentPage);\r\n    if (response && response.status === 200) {\r\n      setBannedWords(response.data);\r\n      setTotal(response.total);\r\n    }\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    fetchBannedWords();\r\n  }, [fetchBannedWords, currentPage]);\r\n\r\n  const handleAddWord = async () => {\r\n    const response = await addBannedWord(newWord);\r\n    if (response && response.status === 201) {\r\n      setBannedWords(response.data);\r\n      setTotal(response.total);\r\n    }\r\n    setNewWord('');\r\n  };\r\n\r\n  const handleDeleteWord = async (id: string) => {\r\n    const response = await deleteBannedWord(id);\r\n    if (response && response.status === 200) {\r\n      setBannedWords(response.data);\r\n      setTotal(response.total);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AdminLayout title=\"리뷰 금칙어 관리\">\r\n      <Align>\r\n        <Input\r\n          type=\"text\"\r\n          value={newWord}\r\n          onChange={(e) => setNewWord(e.target.value)}\r\n          placeholder=\"금칙어 작성\"\r\n        />\r\n        <Button onClick={handleAddWord}>추가</Button>\r\n      </Align>\r\n      <AdminTable headers={['NO.', '금칙어', '삭제']}>\r\n        {bannedWords.length > 0 ? (\r\n          bannedWords.map((data, index) => (\r\n            <Fragment key={data.id}>\r\n              <S.Trow>\r\n                <S.Tcell width={30}>{(currentPage - 1) * 10 + index + 1}</S.Tcell>\r\n                <S.Tcell width={100}>{data.word}</S.Tcell>\r\n                <S.Tcell>\r\n                  <S.TrashIcon onClick={() => handleDeleteWord(data.id)} />\r\n                </S.Tcell>\r\n              </S.Trow>\r\n            </Fragment>\r\n          ))\r\n        ) : (\r\n          <S.Trow>\r\n            <S.Tcell colSpan={3}>금칙어가 없습니다.</S.Tcell>\r\n          </S.Trow>\r\n        )}\r\n      </AdminTable>\r\n      <S.PaginationWrapper>\r\n        <AdminPagination\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          handlePrevPage={handlePrevPage}\r\n          handleNextPage={handleNextPage}\r\n          total={total}\r\n        />\r\n      </S.PaginationWrapper>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AdminManageBannedWords;\r\n\r\nconst Align = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-bottom: 30px;\r\n`;\r\n","import { getAxiosInstance as Axios } from '../axios/index';\r\nimport { BannedWordList } from 'types';\r\n\r\nexport const addBannedWord = async (word: string) => {\r\n  const res = await Axios(`/bannedword`).post<BannedWordList>({ word });\r\n  return res;\r\n};\r\nexport const getBannedWords = async (take: number, page: number) => {\r\n  const res = await Axios(`/bannedword?take=${take}&page=${page}`).get<BannedWordList>();\r\n  return res;\r\n};\r\nexport const deleteBannedWord = async (id: string) => {\r\n  const res = await Axios(`/bannedword/${id}`).remove<BannedWordList>();\r\n  return res;\r\n};\r\n","import { Fragment, useState } from 'react';\r\nimport useAdminPagination from 'hooks/useAdminPagination';\r\nimport * as S from 'styles/AdminStyledTemp';\r\nimport { DeleteCommentByRole, GetComments } from 'queries/comment';\r\nimport styled from 'styled-components';\r\nimport { Loader } from 'components/shared';\r\nimport { MdOutlineSearch } from 'react-icons/md';\r\nimport { useUserStore } from 'store/useUserStore';\r\nimport AdminPagination from 'components/admin/AdminPagination';\r\nimport AdminLayout from 'components/admin/AdminLayout';\r\nimport AdminTable from 'components/admin/AdminTable';\r\nimport AdminManageBannedWords from 'components/admin/AdminManageBannedWords';\r\nimport { LoaderScreen } from 'styles/LoaderWrapper';\r\n\r\nconst take = 10;\r\n\r\nconst AdminManageReviews = () => {\r\n  const { currentPage, setCurrentPage, handleNextPage, handlePrevPage } = useAdminPagination();\r\n  const { user } = useUserStore();\r\n  const userId = user?.id || '';\r\n  const { data, isLoading } = GetComments(currentPage, take);\r\n  const { mutate: deleteCommentByRole } = DeleteCommentByRole(userId);\r\n\r\n  const [selectedReviewId, setSelectedReviewId] = useState<string | null>(null);\r\n\r\n  const comments = data?.data;\r\n  const totalComments = data?.total;\r\n\r\n  const handleDelete = (commentId: string) => {\r\n    if (userId) {\r\n      deleteCommentByRole(commentId);\r\n    }\r\n  };\r\n\r\n  const toggleDetail = (id: string) => {\r\n    setSelectedReviewId((prevId) => (prevId === id ? null : id));\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <LoaderScreen>\r\n        <Loader />\r\n      </LoaderScreen>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FlexAlign>\r\n      <AdminLayout title=\"리뷰 관리\">\r\n        <AdminTable headers={['No', '책이름', '댓글수', '상세보기']}>\r\n          {comments?.map((comment, index) => (\r\n            <Fragment key={comment.commentId}>\r\n              <S.Trow>\r\n                <S.Tcell width={30}>{(currentPage - 1) * 10 + index + 1}</S.Tcell>\r\n                <S.Tcell width={100}>{comment.bookTitle}</S.Tcell>\r\n                <S.Tcell width={100}>{comment.total}</S.Tcell>\r\n                <S.Tcell width={100}>\r\n                  {comment.total > 0 && (\r\n                    <MdOutlineSearch onClick={() => toggleDetail(comment.commentId)} />\r\n                  )}\r\n                </S.Tcell>\r\n              </S.Trow>\r\n            </Fragment>\r\n          ))}\r\n        </AdminTable>\r\n\r\n        <S.PaginationWrapper>\r\n          {totalComments ? (\r\n            <AdminPagination\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              total={totalComments}\r\n              handleNextPage={handleNextPage}\r\n              handlePrevPage={handlePrevPage}\r\n            />\r\n          ) : (\r\n            <NoCommentsMessage>댓글이 없습니다.</NoCommentsMessage>\r\n          )}\r\n        </S.PaginationWrapper>\r\n      </AdminLayout>\r\n\r\n      {selectedReviewId && (\r\n        <Modal>\r\n          <ModalContent>\r\n            <CloseButton onClick={() => setSelectedReviewId(null)}>&times;</CloseButton>\r\n            {comments\r\n              ?.find((comment) => comment.commentId === selectedReviewId)\r\n              ?.commentArray.map((comment) => (\r\n                <CommentCard key={comment.id}>\r\n                  <CommentContent>{comment.content}</CommentContent>\r\n                  <CommentInfo>\r\n                    <InfoItem>\r\n                      <Label>작성일:</Label> {new Date(comment.createdAt).toLocaleString()}\r\n                    </InfoItem>\r\n                    <InfoItem>\r\n                      <Label>수정일:</Label> {new Date(comment.updatedAt).toLocaleString()}\r\n                    </InfoItem>\r\n                  </CommentInfo>\r\n                  <DeleteButton onClick={() => handleDelete(comment.id)}>삭제</DeleteButton>\r\n                </CommentCard>\r\n              ))}\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n      <AdminManageBannedWords />\r\n    </FlexAlign>\r\n  );\r\n};\r\n\r\nexport default AdminManageReviews;\r\n\r\nconst FlexAlign = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  max-width: 80%;\r\n  max-height: 80%;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  float: right;\r\n  font-size: 20px;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CommentCard = styled.div`\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  margin-bottom: 15px;\r\n  background-color: #f9f9f9;\r\n  width: 100%;\r\n`;\r\n\r\nconst CommentContent = styled.p`\r\n  font-size: 16px;\r\n  margin-bottom: 15px;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst CommentInfo = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst InfoItem = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  background-color: #ff4d4f;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-top: 15px;\r\n\r\n  &:hover {\r\n    background-color: #ff7875;\r\n  }\r\n`;\r\n\r\nconst NoCommentsMessage = styled.div`\r\n  text-align: center;\r\n  color: #666;\r\n`;\r\n"],"names":["AdminManageBannedWords","bannedWords","setBannedWords","useState","newWord","setNewWord","currentPage","setCurrentPage","handleNextPage","handlePrevPage","useAdminPagination","total","setTotal","fetchBannedWords","useCallback","async","response","take","page","Axios","get","getBannedWords","status","data","useEffect","handleDeleteWord","id","remove","deleteBannedWord","_jsxs","AdminLayout","title","children","Align","_jsx","Input","type","value","onChange","e","target","placeholder","Button","onClick","post","word","addBannedWord","AdminTable","headers","length","map","index","Fragment","S","width","colSpan","AdminPagination","styled","div","AdminManageReviews","_comments$find","user","useUserStore","userId","isLoading","GetComments","mutate","deleteCommentByRole","DeleteCommentByRole","selectedReviewId","setSelectedReviewId","comments","totalComments","LoaderScreen","Loader","FlexAlign","comment","bookTitle","MdOutlineSearch","toggleDetail","commentId","prevId","NoCommentsMessage","Modal","ModalContent","CloseButton","find","commentArray","CommentCard","CommentContent","content","CommentInfo","InfoItem","Label","Date","createdAt","toLocaleString","updatedAt","DeleteButton","handleDelete","button","p","span"],"sourceRoot":""}