{"version":3,"file":"static/js/778.abb7f042.chunk.js","mappings":"mRAcA,MAAM,aAAEA,EAAY,cAAEC,GAAkBC,EAAAA,YAyOxC,EAxOsBC,KACpB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAsC,OAEhDC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,IAC9BK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,KACpCO,EAAcC,IAAmBR,EAAAA,EAAAA,WAAS,IAC1CS,EAASC,IAAcV,EAAAA,EAAAA,UAAS,KAChCW,EAAWC,IAAgBZ,EAAAA,EAAAA,UAAmB,KAC9Ca,EAAUC,IAAed,EAAAA,EAAAA,UAAmB,KAC5Ce,EAAUC,IAAehB,EAAAA,EAAAA,UAAS,KAClCiB,EAAYC,IAAiBlB,EAAAA,EAAAA,UAAS,KACtCmB,EAAWC,IAAgBpB,EAAAA,EAAAA,WAAS,GACrCqB,EAAY,OAAF7B,QAAE,IAAFA,EAAAA,EAAM,IAChB,OAAE8B,EAAQC,OAAQC,GAAgBpC,KAChCkC,OAAQG,GAAWpC,KAE3BqC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAaC,EAAAA,EAAAA,IAAQR,GAChB,IAADS,EAAAC,EAAAC,EAAV,GAAIJ,EACF7B,EAAS6B,EAAK9B,OAAS,IACvBY,EAAWkB,EAAKnB,SAAW,IAC3BO,EAAYY,EAAKb,UAAY,IAC7BG,EAAcU,EAAKX,YAAc,IACjCH,EAAuB,QAAZgB,EAACF,EAAKK,cAAM,IAAAH,OAAA,EAAXA,EAAaI,KAAKC,GAASA,EAAK3C,MAC5B,QAAhBuC,EAAAnC,EAASwC,eAAO,IAAAL,GAAhBA,EAAkBM,QAAQT,EAAKK,OAAO,GAAGK,MACzC1B,EAAwB,QAAZoB,EAACJ,EAAKK,cAAM,IAAAD,OAAA,EAAXA,EAAaE,KAAKC,GAASA,EAAKG,QAC7ChC,EAAasB,EAAKvB,WAClBH,EAAY0B,EAAKW,KAAKC,MACtBpC,EAAUwB,EAAKzB,OAEnB,CAAE,MAAOsC,GACPC,MAAM,gGACR,CAAC,QACCtB,GAAa,EACf,GAEFuB,EAAW,GACV,CACDtB,EACAtB,EACAW,EACAM,EACAE,EACAJ,EACAF,EACAQ,KAGFM,EAAAA,EAAAA,YAAU,KACQ,KAAZL,GACF3B,GAAU,EACZ,GACC,CAAC2B,EAAS3B,IAEb,MAAMkD,GAAoBC,EAAAA,EAAAA,cAAaC,IACrC/C,EAAS+C,EAAEC,OAAOC,MAAM,GACvB,IAEGC,GAAsBJ,EAAAA,EAAAA,cAAaC,IACvCpC,EAAWoC,EAAEC,OAAOC,MAAM,GACzB,IAEGE,GAAuBL,EAAAA,EAAAA,cAAaC,IACxC9B,EAAY8B,EAAEC,OAAOC,MAAM,GAC1B,IAEGG,GAAyBN,EAAAA,EAAAA,cAAaC,IAC1C5B,EAAc4B,EAAEC,OAAOC,MAAM,GAC5B,KACHtB,EAAAA,EAAAA,YAAU,IACD,KACLd,EAAa,IACbb,EAAS,IACTW,EAAW,IACXM,EAAY,IACZE,EAAc,IACdJ,EAAY,GAAG,GAEhB,CAACf,EAAUW,EAAYM,EAAaE,EAAeJ,EAAaF,IAEnE,MAAMwC,GAAeP,EAAAA,EAAAA,cAAYlB,UAC/BnB,GAAgB,GAChB,IAAK,IAAD6C,EACF,MAAMC,GAAgC,QAAhBD,EAAAzD,EAASwC,eAAO,IAAAiB,OAAA,EAAhBA,EAAkBE,gBAAiB,GACzD,IAAIC,EAAc3C,EAClB,GAAIyC,EAAcG,OAAS,EAAG,CAC5B,MAAMC,QAAsBC,EAAAA,EAAAA,IAAWL,GACvCE,EAAc,IAAI3C,KAAa6C,EAAc7C,UAC7CC,EAAY0C,EACd,CACAlC,EAAO,CACL9B,GAAI6B,EACJvB,QACAW,UACAM,WACAE,aACAgB,OAAQuB,GAEZ,CAAE,MAAOf,GACPC,MAAM,oFACR,CAAC,QACClC,GAAgB,EAClB,CAEAd,EAAS,SAAS,GACjB,CAAC4B,EAAQD,EAASvB,EAAOW,EAASM,EAAUE,EAAYJ,EAAUnB,IAE/DkE,GAAef,EAAAA,EAAAA,cAAY,KAC/BpB,EAAOJ,GACP3B,EAAS,SAAS,GACjB,CAAC+B,EAAQJ,EAAS3B,IACfmE,GAAoBhB,EAAAA,EAAAA,cAAYlB,MAAOmC,EAAcC,EAAiBC,KAC1E,IACE,MAAMC,QAAYC,EAAAA,EAAAA,IAAYJ,EAAMC,EAASC,GAC7CtB,MAAS,OAAHuB,QAAG,IAAHA,OAAG,EAAHA,EAAKE,QACb,CAAE,MAAO1B,GACPC,MAAM,8EACR,IACC,IACH,MAAgB,KAAZrB,GACK+C,EAAAA,EAAAA,KAAA,OAAAC,SAAK,gEAGVlD,GAAaZ,GAEb6D,EAAAA,EAAAA,KAACE,EAAAA,EAAY,CAAAD,UACXD,EAAAA,EAAAA,KAACG,EAAAA,EAAM,OAMXC,EAAAA,EAAAA,MAACC,EAAM,CAAAJ,SAAA,EACLG,EAAAA,EAAAA,MAACE,EAAa,CAAAL,SAAA,EACZG,EAAAA,EAAAA,MAACG,EAAAA,GAAc,CAACC,MAAO,CAAEC,SAAU,QAASR,SAAA,EAC1CD,EAAAA,EAAAA,KAACU,EAAI,CAAAT,SAAC,wBACND,EAAAA,EAAAA,KAACW,EAAI,CAAAV,UAAEW,EAAAA,EAAAA,GAAW3E,SAEpBmE,EAAAA,EAAAA,MAACG,EAAAA,GAAc,CAACC,MAAO,CAAEC,SAAU,QAASR,SAAA,EAC1CD,EAAAA,EAAAA,KAACU,EAAI,CAAAT,SAAC,wBACND,EAAAA,EAAAA,KAACW,EAAI,CAAAV,SAAEpE,QAETuE,EAAAA,EAAAA,MAACG,EAAAA,GAAc,CAACC,MAAO,CAAEC,SAAU,QAASR,SAAA,EAC1CD,EAAAA,EAAAA,KAACU,EAAI,CAAAT,SAAC,wBACND,EAAAA,EAAAA,KAACW,EAAI,CAAAV,SAAElE,QAETqE,EAAAA,EAAAA,MAACG,EAAAA,GAAc,CAACC,MAAO,CAAEC,SAAU,QAASR,SAAA,EAC1CD,EAAAA,EAAAA,KAACU,EAAI,CAAAT,SAAC,8BACND,EAAAA,EAAAA,KAACW,EAAI,CAAAV,SAAEpD,QAETuD,EAAAA,EAAAA,MAACG,EAAAA,GAAc,CAACC,MAAO,CAAEC,SAAU,QAASR,SAAA,EAC1CD,EAAAA,EAAAA,KAACU,EAAI,CAAAT,SAAC,8BACND,EAAAA,EAAAA,KAACW,EAAI,CAAAV,SAAEtD,WAIXyD,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACC,MAAO,CAAEK,UAAW,aAAcJ,SAAU,WAAYR,SAAA,EACnED,EAAAA,EAAAA,KAACO,EAAAA,GAAiB,CAAAN,UAChBD,EAAAA,EAAAA,KAACO,EAAAA,GAAgB,CAAAN,SAAC,uCAEpBG,EAAAA,EAAAA,MAACG,EAAAA,GAAS,CAAAN,SAAA,EACRG,EAAAA,EAAAA,MAACG,EAAAA,GAAY,CAAAN,SAAA,EACXD,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,MAAO,CAAEM,MAAO,SAAUb,SAAC,wBACpCD,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACnC,KAAK,QAAQ2C,YAAY,QAAQnC,MAAOlD,EAAOsF,SAAUxC,QAEpE4B,EAAAA,EAAAA,MAACG,EAAAA,GAAY,CAACU,WAAY,GAAGhB,SAAA,EAC3BD,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,MAAO,CAAEM,MAAO,SAAUb,SAAC,kBACpCD,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTnC,KAAK,UACL2C,YAAY,UACZnC,MAAOvC,EACP2E,SAAUnC,QAGduB,EAAAA,EAAAA,MAACG,EAAAA,GAAY,CAACU,WAAY,GAAGhB,SAAA,EAC3BD,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,MAAO,CAAEM,MAAO,SAAUb,SAAC,+BACpCD,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CACNnC,KAAK,aACL2C,YAAY,cACZnC,MAAO/B,EACPmE,SAAUjC,QAGdqB,EAAAA,EAAAA,MAACG,EAAAA,GAAY,CAACU,WAAY,GAAGhB,SAAA,EAC3BD,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,MAAO,CAAEM,MAAO,SAAUb,SAAC,8BACpCG,EAAAA,EAAAA,MAAA,UAAQhC,KAAK,WAAWQ,MAAOjC,EAAUqE,SAAUlC,EAAqBmB,SAAA,EACtED,EAAAA,EAAAA,KAAA,UAAQpB,MAAM,GAAEqB,SAAC,sBAChBiB,EAAAA,GAAgBpD,KAAKnB,IACpBqD,EAAAA,EAAAA,KAAA,UAAuBpB,MAAOjC,EAASsD,SACpCtD,GADUA,eAOrByD,EAAAA,EAAAA,MAACG,EAAAA,GAAY,CAACU,WAAY,GAAGhB,SAAA,EAC3BD,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,MAAO,CAAEM,MAAO,SAAUb,SAAC,wBACpCD,EAAAA,EAAAA,KAACmB,EAAAA,EAAa,CACZC,IAAK5F,EACLiB,SAAUA,EACVF,UAAWA,EACX8E,OAAQjG,EACRqE,kBAAmBA,QAGvBW,EAAAA,EAAAA,MAACG,EAAAA,GAAY,CACXC,MAAO,CACLc,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,UAAW,GACXC,IAAK,IACLzB,SAAA,EAEFD,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,CAACC,QAAS5C,EAAc7B,OAAQC,EAAY6C,SAAC,kBAGpDD,EAAAA,EAAAA,KAACO,EAAAA,GAAQ,CAACqB,QAASpC,EAAcqC,SAAS,QAAO5B,SAAC,yBAK/C,EAMPI,EAASyB,EAAAA,GAAOC,GAAG;;;;;;EAQnBzB,EAAgBwB,EAAAA,GAAOC,GAAG;;;;EAM1BrB,EAAOoB,EAAAA,GAAOC,GAAG;;EAIjBpB,EAAOmB,EAAAA,GAAOC,GAAG","sources":["pages/admin/AdminEditItem.tsx"],"sourcesContent":["import { useState, useEffect, ChangeEvent as ReactChangeEvent, useRef, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport * as S from 'styles/AdminStyledTemp';\r\nimport { bookQueries } from 'queries';\r\nimport ImageUploader, { ImageUploaderImperativeHandle } from 'components/shared/ImageUploader';\r\nimport { postImages, deleteImage } from 'api/imageapi';\r\nimport Loader from 'components/shared/Loader';\r\nimport { Button } from 'components/shared';\r\nimport { styled } from 'styled-components';\r\nimport { getDateStr } from 'utils';\r\nimport { BOOK_CATEGORIES } from 'constant';\r\nimport { getBook } from 'api/book';\r\nimport { LoaderScreen } from 'styles/LoaderWrapper';\r\n\r\nconst { usePatchBook, useDeleteBook } = bookQueries;\r\nconst AdminEditItem = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const imageRef = useRef<ImageUploaderImperativeHandle>(null);\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [clicks, setClicks] = useState(0);\r\n  const [createdAt, setCreatedAt] = useState('');\r\n  const [patchLoading, setPatchLoading] = useState(false);\r\n  const [content, setContent] = useState('');\r\n  const [imagesSrc, setImagesSrc] = useState<string[]>([]);\r\n  const [imageIds, setImageIds] = useState<string[]>([]);\r\n  const [category, setCategory] = useState('');\r\n  const [authorName, setAuthorName] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const paramId = id ?? '';\r\n  const { mutate, status: patchStatus } = usePatchBook();\r\n  const { mutate: remove } = useDeleteBook();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const book = await getBook(paramId);\r\n        if (book) {\r\n          setTitle(book.title || '');\r\n          setContent(book.content || '');\r\n          setCategory(book.category || '');\r\n          setAuthorName(book.authorName || '');\r\n          setImageIds(book.images?.map((data) => data.id));\r\n          imageRef.current?.setPath(book.images[0].path);\r\n          setImagesSrc(book.images?.map((data) => data.path));\r\n          setCreatedAt(book.createdAt);\r\n          setUsername(book.user.name);\r\n          setClicks(book.clicks);\r\n        }\r\n      } catch (error) {\r\n        alert('데이터를 불러오는데 실패했습니다.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [\r\n    paramId,\r\n    setTitle,\r\n    setContent,\r\n    setCategory,\r\n    setAuthorName,\r\n    setImageIds,\r\n    setImagesSrc,\r\n    setIsLoading,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (paramId === '') {\r\n      navigate(-1);\r\n    }\r\n  }, [paramId, navigate]);\r\n\r\n  const handleChangeTitle = useCallback((e: ReactChangeEvent<HTMLInputElement>) => {\r\n    setTitle(e.target.value);\r\n  }, []);\r\n\r\n  const handleChangeContent = useCallback((e: ReactChangeEvent<HTMLTextAreaElement>) => {\r\n    setContent(e.target.value);\r\n  }, []);\r\n\r\n  const handleChangeCategory = useCallback((e: ReactChangeEvent<HTMLSelectElement>) => {\r\n    setCategory(e.target.value);\r\n  }, []);\r\n\r\n  const handleChangeAuthorName = useCallback((e: ReactChangeEvent<HTMLInputElement>) => {\r\n    setAuthorName(e.target.value);\r\n  }, []);\r\n  useEffect(() => {\r\n    return () => {\r\n      setImagesSrc([]);\r\n      setTitle('');\r\n      setContent('');\r\n      setCategory('');\r\n      setAuthorName('');\r\n      setImageIds([]);\r\n    };\r\n  }, [setTitle, setContent, setCategory, setAuthorName, setImageIds, setImagesSrc]);\r\n\r\n  const handleUpdate = useCallback(async () => {\r\n    setPatchLoading(true);\r\n    try {\r\n      const newImageFiles = imageRef.current?.getFileData() || [];\r\n      let newImageIds = imageIds;\r\n      if (newImageFiles.length > 0) {\r\n        const uploadResults = await postImages(newImageFiles);\r\n        newImageIds = [...imageIds, ...uploadResults.imageIds];\r\n        setImageIds(newImageIds);\r\n      }\r\n      mutate({\r\n        id: paramId,\r\n        title,\r\n        content,\r\n        category,\r\n        authorName,\r\n        images: newImageIds,\r\n      });\r\n    } catch (error) {\r\n      alert('이미지 업로드에 실패했습니다.');\r\n    } finally {\r\n      setPatchLoading(false);\r\n    }\r\n\r\n    navigate(`/admin`);\r\n  }, [mutate, paramId, title, content, category, authorName, imageIds, navigate]);\r\n\r\n  const handleRemove = useCallback(() => {\r\n    remove(paramId);\r\n    navigate(`/admin`);\r\n  }, [remove, paramId, navigate]);\r\n  const handleDeleteImage = useCallback(async (type: string, storyId: string, imageId: string) => {\r\n    try {\r\n      const res = await deleteImage(type, storyId, imageId);\r\n      alert(res?.message);\r\n    } catch (error) {\r\n      alert('이미지 삭제에 실패했습니다.');\r\n    }\r\n  }, []);\r\n  if (paramId === '') {\r\n    return <div>유효하지 않은 ID입니다.</div>;\r\n  }\r\n\r\n  if (isLoading || patchLoading) {\r\n    return (\r\n      <LoaderScreen>\r\n        <Loader />\r\n      </LoaderScreen>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <ContainerWrap>\r\n        <S.SubContainer style={{ gridArea: 'data' }}>\r\n          <Text>생성일</Text>\r\n          <Data>{getDateStr(createdAt)}</Data>\r\n        </S.SubContainer>\r\n        <S.SubContainer style={{ gridArea: 'data' }}>\r\n          <Text>생성자</Text>\r\n          <Data>{username}</Data>\r\n        </S.SubContainer>\r\n        <S.SubContainer style={{ gridArea: 'data' }}>\r\n          <Text>조회수</Text>\r\n          <Data>{clicks}</Data>\r\n        </S.SubContainer>\r\n        <S.SubContainer style={{ gridArea: 'data' }}>\r\n          <Text>작가이름</Text>\r\n          <Data>{authorName}</Data>\r\n        </S.SubContainer>\r\n        <S.SubContainer style={{ gridArea: 'data' }}>\r\n          <Text>카테고리</Text>\r\n          <Data>{category}</Data>\r\n        </S.SubContainer>\r\n      </ContainerWrap>\r\n\r\n      <S.Container style={{ alignSelf: 'flex-start', gridArea: 'contain' }}>\r\n        <S.ContainerHeader>\r\n          <S.ContainerTitle>책 수정하기</S.ContainerTitle>\r\n        </S.ContainerHeader>\r\n        <S.Wrapper>\r\n          <S.InputField>\r\n            <S.Label style={{ color: 'black' }}>도서명</S.Label>\r\n            <S.Input name=\"title\" placeholder=\"Title\" value={title} onChange={handleChangeTitle} />\r\n          </S.InputField>\r\n          <S.InputField $marginTop={20}>\r\n            <S.Label style={{ color: 'black' }}>설명</S.Label>\r\n            <S.Textarea\r\n              name=\"content\"\r\n              placeholder=\"content\"\r\n              value={content}\r\n              onChange={handleChangeContent}\r\n            />\r\n          </S.InputField>\r\n          <S.InputField $marginTop={20}>\r\n            <S.Label style={{ color: 'black' }}>저자 이름</S.Label>\r\n            <S.Input\r\n              name=\"authorName\"\r\n              placeholder=\"Author Name\"\r\n              value={authorName}\r\n              onChange={handleChangeAuthorName}\r\n            />\r\n          </S.InputField>\r\n          <S.InputField $marginTop={20}>\r\n            <S.Label style={{ color: 'black' }}>카테고리</S.Label>\r\n            <select name=\"category\" value={category} onChange={handleChangeCategory}>\r\n              <option value=\"\">Select a category</option>\r\n              {BOOK_CATEGORIES.map((category) => (\r\n                <option key={category} value={category}>\r\n                  {category}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </S.InputField>\r\n        </S.Wrapper>\r\n        <S.InputField $marginTop={20}>\r\n          <S.Label style={{ color: 'black' }}>이미지</S.Label>\r\n          <ImageUploader\r\n            ref={imageRef}\r\n            imageIds={imageIds}\r\n            imagesSrc={imagesSrc}\r\n            bookId={id}\r\n            handleDeleteImage={handleDeleteImage}\r\n          />\r\n        </S.InputField>\r\n        <S.InputField\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            marginTop: 30,\r\n            gap: 20,\r\n          }}\r\n        >\r\n          <Button onClick={handleUpdate} status={patchStatus}>\r\n            수정\r\n          </Button>\r\n          <S.Button onClick={handleRemove} $variant=\"error\">\r\n            삭제\r\n          </S.Button>\r\n        </S.InputField>\r\n      </S.Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AdminEditItem;\r\n\r\nconst Layout = styled.div`\r\n  display: grid;\r\n  grid-template-areas: 'data contain';\r\n  width: 100%;\r\n  height: 100%;\r\n  gap: 30px;\r\n`;\r\n\r\nconst ContainerWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n`;\r\n"],"names":["usePatchBook","useDeleteBook","bookQueries","AdminEditItem","id","useParams","navigate","useNavigate","imageRef","useRef","title","setTitle","useState","username","setUsername","clicks","setClicks","createdAt","setCreatedAt","patchLoading","setPatchLoading","content","setContent","imagesSrc","setImagesSrc","imageIds","setImageIds","category","setCategory","authorName","setAuthorName","isLoading","setIsLoading","paramId","mutate","status","patchStatus","remove","useEffect","async","book","getBook","_book$images","_imageRef$current","_book$images2","images","map","data","current","setPath","path","user","name","error","alert","fetchData","handleChangeTitle","useCallback","e","target","value","handleChangeContent","handleChangeCategory","handleChangeAuthorName","handleUpdate","_imageRef$current2","newImageFiles","getFileData","newImageIds","length","uploadResults","postImages","handleRemove","handleDeleteImage","type","storyId","imageId","res","deleteImage","message","_jsx","children","LoaderScreen","Loader","_jsxs","Layout","ContainerWrap","S","style","gridArea","Text","Data","getDateStr","alignSelf","color","placeholder","onChange","$marginTop","BOOK_CATEGORIES","ImageUploader","ref","bookId","display","flexDirection","justifyContent","marginTop","gap","Button","onClick","$variant","styled","div"],"sourceRoot":""}